services:
  app:
    build:
      context: ./docker/8.4
      dockerfile: Dockerfile
    image: invelora/app:latest
    depends_on:
      - pgsql
      - mailpit
      - minio
      - soketi
    expose:
      - "9000"
    environment:
      WWWUSER: ${WWWUSER:-1000}
      WWWGROUP: ${WWWGROUP:-1337}
      SUPERVISOR_PHP_USER: www-data
      APP_ENV: '${APP_ENV}'
      APP_KEY: '${APP_KEY}'
      APP_DEBUG: '${APP_DEBUG}'
      APP_URL: '${APP_URL}'
      DB_HOST: pgsql
      DB_PORT: 5432
      DB_DATABASE: '${DB_DATABASE}'
      DB_USERNAME: '${DB_USERNAME}'
      DB_PASSWORD: '${DB_PASSWORD}'
    volumes:
      - .:/var/www/html
    networks:
      - app_net

  pgsql:
    image: 'postgres:17'
    ports:
      - '${FORWARD_DB_PORT:-5432}:5432'
    environment:
      POSTGRES_DB: '${DB_DATABASE}'
      POSTGRES_USER: '${DB_USERNAME}'
      POSTGRES_PASSWORD: '${DB_PASSWORD}'
    volumes:
      - pgsql-data:/var/lib/postgresql/data
      - ./docker/pgsql/create-testing-database.sql:/docker-entrypoint-initdb.d/10-create-testing-database.sql
    networks:
      - app_net
    healthcheck:
      test: ["CMD", "pg_isready", "-q", "-d", "${DB_DATABASE}", "-U", "${DB_USERNAME}"]
      retries: 3
      timeout: 5s

  mailpit:
    image: 'axllent/mailpit:latest'
    ports:
      - '${FORWARD_MAILPIT_PORT:-1025}:1025'
      - '${FORWARD_MAILPIT_DASHBOARD_PORT:-8025}:8025'
    networks:
      - app_net

  minio:
    image: 'minio/minio:latest'
    command: server /data --console-address ":8900"
    ports:
      - '${FORWARD_MINIO_PORT:-9000}:9000'
      - '${FORWARD_MINIO_CONSOLE_PORT:-8900}:8900'
    environment:
      MINIO_ROOT_USER: '${AWS_ACCESS_KEY_ID}'
      MINIO_ROOT_PASSWORD: '${AWS_SECRET_ACCESS_KEY}'
    volumes:
      - minio-data:/data
      - ./docker/minio/entrypoint.sh:/entrypoint.sh:ro
    entrypoint: ["/entrypoint.sh"]
    networks:
      - app_net
    healthcheck:
      test: ["CMD", "mc", "ready", "local"]
      retries: 3
      timeout: 5s
  
  nginx:
    image: nginx:stable-alpine
    ports:
      - "${APP_PORT:-80}:80"
    depends_on:
      - app
    volumes:
      - .:/var/www/html:ro
      - ./docker/8.4/nginx.conf:/etc/nginx/nginx.conf:ro
    networks:
      - app_net

  soketi:
    image: 'quay.io/soketi/soketi:latest-16-alpine'
    ports:
      - '${PUSHER_PORT:-6001}:6001'
      - '${PUSHER_METRICS_PORT:-9601}:9601'
    environment:
      SOKETI_DEBUG: '${SOKETI_DEBUG:-0}'
      SOKETI_METRICS_SERVER_PORT: '9601'
      SOKETI_DEFAULT_APP_ID: '${PUSHER_APP_ID}'
      SOKETI_DEFAULT_APP_KEY: '${PUSHER_APP_KEY}'
      SOKETI_DEFAULT_APP_SECRET: '${PUSHER_APP_SECRET}'
    networks:
      - app_net

networks:
  app_net:
    driver: bridge

volumes:
  pgsql-data:
    driver: local
  minio-data:
    driver: local
